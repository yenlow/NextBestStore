install.packages("foreach")
require(foreach)
?foreach
?surv
?Surv
library(Survival)
library(survival)
?Surv
#install ohdisi
install.packages("devtools")
library(devtools)
install_github("ohdsi/Cyclops")
#to use Cyclops
library(Cyclops)
install.packages(c("httr", "RCurl"))
install.packages("httr")
install.packages(RCurl")
install.packages("RCurl")
install.packages(c("httr", "RCurl"))
install.packages("devtools")
library(devtools)
install_github("ohdsi/Cyclops")
CC <- gvisComboChart(CityPopularity, xvar='City',
yvar=c('Mean', 'Popularity'),
options=list(seriesType='bars',
width=450, height=300,
title='City Popularity',
series='{0: {type:\"line\"}}'))
plot(CC)
library(googleVis)
op <- options(gvis.plot.tag='chart')
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC <- gvisComboChart(CityPopularity, xvar='City',
yvar=c('Mean', 'Popularity'),
options=list(seriesType='bars',
width=450, height=300,
title='City Popularity',
series='{0: {type:\"line\"}}'))
plot(CC)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
?tabBox
?tabPanel
shiny::runApp('insight/models/maps')
?switch
?radioButtons
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
?switch
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
shiny::runApp('insight/models/maps')
?renderImage
?png
?tempfile
shiny::runApp('insight/models/maps')
setwd("insight/models/maps")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
