install.packages("foreach")
require(foreach)
?foreach
?surv
?Surv
library(Survival)
library(survival)
?Surv
#install ohdisi
install.packages("devtools")
library(devtools)
install_github("ohdsi/Cyclops")
#to use Cyclops
library(Cyclops)
install.packages(c("httr", "RCurl"))
install.packages("httr")
install.packages(RCurl")
install.packages("RCurl")
install.packages(c("httr", "RCurl"))
install.packages("devtools")
library(devtools)
install_github("ohdsi/Cyclops")
CC <- gvisComboChart(CityPopularity, xvar='City',
yvar=c('Mean', 'Popularity'),
options=list(seriesType='bars',
width=450, height=300,
title='City Popularity',
series='{0: {type:\"line\"}}'))
plot(CC)
library(googleVis)
op <- options(gvis.plot.tag='chart')
CityPopularity$Mean=mean(CityPopularity$Popularity)
CC <- gvisComboChart(CityPopularity, xvar='City',
yvar=c('Mean', 'Popularity'),
options=list(seriesType='bars',
width=450, height=300,
title='City Popularity',
series='{0: {type:\"line\"}}'))
plot(CC)
# 16-Jun-15 Yen Low
RScriptPath="/mnt/hgfs/scripts"
ProjectPath="/mnt/hgfs/projects"
setwd(paste(ProjectPath,"/insight/models/descriptive",sep=""))
getwd()
source(paste(RScriptPath,"/R/utils.R",sep=""))
source(paste(RScriptPath,"/R/preprocess.R",sep=""))
require(choroplethrZip)
#load all the data sources
load(file=paste0(ProjectPath,"/insight/data/storeChar.RData"),verbose=T)  #store factors
load(file=paste0(ProjectPath,"/insight/data/cbp.RData"),verbose=T)  #CBP biz climate factors (number of businesses, not normalized by population)
load(file=paste0(ProjectPath,"/insight/data/competition.RData"),verbose=T)  #compet indices
load(file=paste0(ProjectPath,"/insight/data/chr.RData"),verbose=T)  #health indices
data(zip.regions)
zip.regions$county.fips=formatC(zip.regions$county.fips.numeric,width=5,format='d',flag='0')
head(sort(zip.regions$county.fips))
lsos()
rm(allStores,bizTypeDf,relTypeDf,cbpTypeAsFeatures,store_county,store_state)
gci()
lsos()
#1602 stores
#map zip to county in order to get county-level health data later
tmp=merge(storeDf,zip.regions[,c("region","county.name","county.fips")], by.x="zip", by.y="region",all.x=T)
#don't double count same store in 2 counties (cos 1 zip can map to 2 counties)
#delete the second county
tmp=tmp[order(tmp$zip,tmp$county.fips),]
dsStore=tmp[!duplicated(tmp$zip),] #1437 stores
dim(dsStore)
dsStore=merge(dsStore,competDf,by.x="zip",by.y=0,all.x=T)     #add compet data
dsStore=merge(dsStore,chrDf,by.x="county.fips",by.y="fip",all.x=T)    #add health data
cbpRates=merge(dsStore[,c("zip","X2011.population.estimate")],cbpDf,by.x="zip",by.y="zip",all.x=T)
colnames(cbpRates)
excludeID=grep("^zip$|population|^city$|AnnPayrollK",colnames(cbpRates))
pop=toNumWithoutComma(cbpRates$X2011.population.estimate)
tmp=cbpRates[,-excludeID]
for(i in 1:ncol(tmp)) tmp[,i]=tmp[,i]/pop*100000
cbpRates=cbind(cbpRates[,excludeID],tmp)
dim(cbpRates)
cbpRates=cbpRates[,-grep("population",colnames(cbpRates))]
dim(cbpRates)
dsStore=merge(dsStore,cbpRates,by.x="zip",by.y="zip",all.x=T)    #add biz data
dim(dsStore)
colnames(dsStore)
dim(dsStore)
dsStore=dsStore[,-grep("DEA_NUM|numClient|CODE$|^County$|^State$|not.ranked$",colnames(dsStore))]   #drop columns
dim(dsStore)
colnames(dsStore)
